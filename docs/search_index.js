var documenterSearchIndex = {"docs":
[{"location":"mesh/mesh_mb/#Multiband-Mesh","page":"Multiband Meshes","title":"Multiband Mesh","text":"","category":"section"},{"location":"install/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"Ludwig is not yet registered on the general Julia package registry.  To run the latest version of Ludwig.jl, clone the repository. In the root folder of the project, ","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"julia> ]\n(@v1.8) pkg> activate .\n(Ludwig) pkg> instantiate","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"To run scripts using Ludwig, you must check out Ludwig for development in your scripting environment.","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"julia> ]\n(@v1.8) pkg> activate PATH_TO_SCRIPT_DIR\n(SCRIPT_DIR) pkg> dev PATH_TO_LUDWIG_ROOT\n(SCRIPT_DIR) pkg> instantiate","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"Functionality provided by Ludwig can now be accessed with using Ludwig.","category":"page"},{"location":"mesh/mesh/#Fermi-Surface-Centered-Meshes","page":"Fermi Surface Centered Meshes","title":"Fermi Surface Centered Meshes","text":"","category":"section"},{"location":"mesh/mesh/","page":"Fermi Surface Centered Meshes","title":"Fermi Surface Centered Meshes","text":"Ludwig.Patch","category":"page"},{"location":"mesh/mesh/#Ludwig.Patch","page":"Fermi Surface Centered Meshes","title":"Ludwig.Patch","text":"Representation of a patch in momentum space to be integrated over when calculating the collision integral kernel.\n\nFields\n\nmomentum: Momentum in 1st BZ scaled by 2pi  a\nenergies: Eigenvalues of Hamiltonian evaluated at momentum\nband_index: Index of the Fermi surface from which the patch was generated\nv: The group velocity at momentum taking energies[band_index] as the dispersion\ndV: Area of the patch in units of (2pia)^2\njinv: Jacobian of transformation from (k_x k_y) mapsto (varepsilon theta), the local patch coordinates\nw: The weights of the original orbital basis corresponding to the band_indexth eigenvalue\ncorners: Indices of coordinates in parent Mesh struct of corners for plotting\n\n\n\n\n\n","category":"type"},{"location":"#Ludwig.jl-Documentation","page":"Home","title":"Ludwig.jl Documentation","text":"","category":"section"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Ludwig provides a framework for generating the linearized Boltzmann collision operator for electron-electron scattering in two-dimensional materials and materials with a pseudo-two-dimensional band structure. This package also provides utilities for calculating conductivities and viscosities of the electron fluid from the generated collision matrix. For now, only square Brillouin Zones are supported.","category":"page"},{"location":"","page":"Home","title":"Home","text":"info: Unicode\nThis package uses Unicode characters (primarily Greek letters) such as η, σ, and ε in both function names and for function arguments.  Unicode symbols can be entered in the Julia REPL by typing, e.g., \\eta followed by tab key. Read more about Unicode  symbols in the Julia Documentation.","category":"page"},{"location":"#Units","page":"Home","title":"Units","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For all calculations, hbar = k_B = 1 For converting output back to physical units, Ludwig includes the values of some important physical constants from the 2022 CODATA Recommended Values of the Fundamental Physical Constants.","category":"page"},{"location":"","page":"Home","title":"Home","text":"G0","category":"page"},{"location":"#Ludwig.G0","page":"Home","title":"Ludwig.G0","text":"Conductance quantum in Siemens\n\n\n\n\n\n","category":"constant"},{"location":"","page":"Home","title":"Home","text":"kb","category":"page"},{"location":"#Ludwig.kb","page":"Home","title":"Ludwig.kb","text":"Boltzmann constant in eV/K\n\n\n\n\n\n","category":"constant"},{"location":"","page":"Home","title":"Home","text":"hbar","category":"page"},{"location":"#Ludwig.hbar","page":"Home","title":"Ludwig.hbar","text":"Reduced Planck's constant in eV.s\n\n\n\n\n\n","category":"constant"},{"location":"","page":"Home","title":"Home","text":"e_charge","category":"page"},{"location":"#Ludwig.e_charge","page":"Home","title":"Ludwig.e_charge","text":"Electron charge in C\n\n\n\n\n\n","category":"constant"},{"location":"","page":"Home","title":"Home","text":"danger: Energy Scale\nSince we take k_B = 1, temperatures must be expressed in the same energy scale used by the Hamiltonian.  We recommend expressing all energies in units of eV for simplicity in multiband calculations where each band may have an independent natural energy scale. This is particularly important since many function involve the ratio of the energy to temperature; e.g. f0(E, T)","category":"page"},{"location":"","page":"Home","title":"Home","text":"f0","category":"page"},{"location":"#Ludwig.f0","page":"Home","title":"Ludwig.f0","text":"f0(E, T)\n\nReturn the value of the Fermi-Dirac distribution for energy E and temperature T.\n\n    f^(0)(varepsilon) = frac11 + e^varepsilonk_B T\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"Moreover, all crystal momenta are normalized by 2pi  a_i where a_i denotes the the lattice spacing. This makes the computation of momentum integrals simplified:","category":"page"},{"location":"","page":"Home","title":"Home","text":"int fracd^2mathbfk(2pi)^2 mapsto frac1a^2 int d^2mathbfk","category":"page"},{"location":"#Other-Utilities","page":"Home","title":"Other Utilities","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Ludwig.get_bands","category":"page"},{"location":"#Ludwig.get_bands","page":"Home","title":"Ludwig.get_bands","text":"get_bands(H, N)\n\nReturn an interpolation of the eigenvalues of H on a square grid [-0.5, 0.5].\n\nIt is assumed that H is a function of a vector of length 2 and returns a square matrix. N is the number of points between -0.5 and 0.5 used for interpolation.\n\n\n\n\n\n","category":"function"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<!– Eite Tiesinga, Peter J. Mohr, David B. Newell, and Barry N. Taylor (2024), \"The 2022 CODATA Recommended Values of the Fundamental Physical Constants\" (Web Version 9.0). Database developed by J. Baker, M. Douma, and S. Kotochigova. Available at https://physics.nist.gov/constants, National Institute of Standards and Technology, Gaithersburg, MD 20899. –>","category":"page"},{"location":"mesh/marching_squares/#Marching-Squares-Algorithm","page":"Marching Squares","title":"Marching Squares Algorithm","text":"","category":"section"},{"location":"mesh/marching_squares/","page":"Marching Squares","title":"Marching Squares","text":"Ludwig generates ","category":"page"},{"location":"mesh/mesh_sb/#Single-Band-Mesh","page":"Single Band Mesh","title":"Single Band Mesh","text":"","category":"section"}]
}
